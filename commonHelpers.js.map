{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '43047310-ec96e83c6d494f225a37e8405';\nimport axios from 'axios';\n\nconst PER_PAGE = 15;\nlet currentPage = 1;\n\nexport async function searchImages(keyword) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(\n    keyword\n  )}&image_type=photo&orientation=horizontal&safesearch=true&page=${currentPage}&per_page=${PER_PAGE}`;\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data.hits.map(image => ({\n      webformatURL: image.webformatURL,\n      largeImageURL: image.largeImageURL,\n      tags: image.tags,\n      likes: image.likes,\n      views: image.views,\n      comments: image.comments,\n      downloads: image.downloads,\n    }));\n  } catch (error) {\n    throw new Error('Failed to fetch images from Pixabay API');\n  }\n}\n\nexport function resetPage() {\n  currentPage = 1;\n}\n\nexport function increasePage() {\n  currentPage++;\n}\n// ==================================\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nlet lightbox = null;\n\n// Определение функции clearGallery\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n}\n\n// Определение функции renderImages\nexport function renderImages(images) {\n  const gallery = document.querySelector('.gallery');\n\n  // Очищаем галерею перед добавлением новых изображений\n  gallery.innerHTML = '';\n\n  // Функция для создания <li> с <p> и классом\n  function createListItemWithParagraph(label, value, className) {\n    const listItem = document.createElement('li');\n    listItem.textContent = `${label}`;\n    listItem.classList.add(className); // Добавление класса к <li>\n    const paragraph = document.createElement('p');\n    paragraph.textContent = `${value}`;\n    listItem.appendChild(paragraph); // Добавление <p> к <li>\n    return listItem;\n  }\n\n  images.forEach(image => {\n    // Создаем элемент ссылки для каждого изображения\n    const link = document.createElement('a');\n    link.href = image.largeImageURL;\n    link.dataset.src = image.largeImageURL; // Добавляем data-src для SimpleLightbox\n\n    // Создаем элемент изображения\n    const img = document.createElement('img');\n    img.src = image.webformatURL;\n    img.alt = image.tags;\n    img.title = image.tags;\n\n    // Добавляем изображение к ссылке\n    link.appendChild(img);\n\n    // Создаем список с данными\n    const dataList = document.createElement('ul');\n    dataList.classList.add('my-ul-class');\n\n    // Создаем элемент <li> для каждого значения и добавляем к <ul>\n    const likesItem = createListItemWithParagraph(\n      'Likes:',\n      image.likes,\n      'my-li-class'\n    );\n    const viewsItem = createListItemWithParagraph(\n      'Views:',\n      image.views,\n      'my-li-class'\n    );\n    const commentsItem = createListItemWithParagraph(\n      'Comments:',\n      image.comments,\n      'my-li-class'\n    );\n    const downloadsItem = createListItemWithParagraph(\n      'Downloads:',\n      image.downloads,\n      'my-li-class'\n    );\n\n    dataList.appendChild(likesItem);\n    dataList.appendChild(viewsItem);\n    dataList.appendChild(commentsItem);\n    dataList.appendChild(downloadsItem);\n\n    // Создаем элемент для размещения списка данных\n    const info = document.createElement('div');\n    info.classList.add('image-info');\n    info.appendChild(dataList);\n\n    // Создаем контейнер для изображения и данных\n    const container = document.createElement('div');\n    container.classList.add('image-container');\n    container.appendChild(link);\n    container.appendChild(info);\n\n    // Добавляем контейнер к галерее\n    gallery.appendChild(container);\n  });\n\n  // Создаем или обновляем SimpleLightbox\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a');\n  } else {\n    lightbox.refresh();\n  }\n}\n// ===========================================\n","// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import { searchImages } from './js/pixabay-api';\n// import { clearGallery, renderImages } from './js/render-functions';\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   const searchForm = document.getElementById('search-form');\n//   const loader = document.getElementById('loader');\n//   let lightbox;\n\n//   searchForm.addEventListener('submit', async event => {\n//     event.preventDefault();\n\n//     const query = event.target.elements.query.value.trim();\n//     if (!query) {\n//       iziToast.error({\n//         title: 'Error',\n//         position: 'topRight',\n//         message: 'Please enter a search query',\n//       });\n//       return;\n//     }\n\n//     clearGallery();\n//     loader.style.display = 'block';\n\n//     try {\n//       const images = await searchImages(query);\n//       renderImages(images);\n\n//       if (lightbox) {\n//         lightbox.refresh();\n//       } else {\n//         lightbox = new SimpleLightbox('.gallery a', {\n//           captionsData: 'alt',\n//           captionDelay: 250,\n//         });\n//       }\n//     } catch (error) {\n//       console.error(error.message);\n//       iziToast.error({\n//         title: 'Error',\n//         position: 'topRight',\n//         message: 'Failed to fetch images. Please try again later.',\n//       });\n//     } finally {\n//       loader.style.display = 'none';\n//     }\n//   });\n\n//   // Инициализируем SimpleLightbox при загрузке страницы\n//   lightbox = new SimpleLightbox('.gallery a', {\n//     captionsData: 'alt',\n//     captionDelay: 250,\n//   });\n// });\n// // =======================================================\n// async function onFormSubmit(e) {\n//   e.preventDefault();\n//   query = e.target.elements.query.value.trim();\n//   page = 1;\n\n//   if (!query) {\n//     showError('Empty field');\n//     return;\n//   }\n\n//   showLoader();\n\n//   try {\n//     const data = await fetchArticles(query, page);\n//     if (data.totalResults === 0) {\n//       showError('Sorry!');\n//     }\n//     maxPage = Math.ceil(data.totalResults / 15);\n//     refs.articleListElem.innerHTML = '';\n//     renderArticles(data.articles);\n//   } catch (err) {\n//     showError(err);\n//   }\n\n//   hideLoader();\n//   checkBtnVisibleStatus();\n//   e.target.reset();\n// }\n\n// async function onLoadMoreClick() {\n//   page += 1;\n//   showLoader();\n//   const data = await fetchArticles(query, page);\n//   renderArticles(data.articles);\n//   hideLoader();\n//   checkBtnVisibleStatus();\n\n//   const height =\n//     refs.articleListElem.firstElementChild.getBoundingClientRect().height;\n\n//   scrollBy({\n//     behavior: 'smooth',\n//     top: 10,\n//   });\n// }\n\n// ======================================\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { searchImages } from './js/pixabay-api';\nimport { clearGallery, renderImages } from './js/render-functions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchForm = document.getElementById('search-form');\n  const gallery = document.getElementById('gallery');\n  const loader = document.getElementById('loader');\n\n  let page = 1; // Початкова сторінка для завантаження\n  let query = ''; // Початковий пустий рядок для пошуку\n  let maxPage = 1; // Початкова максимальна сторінка\n\n  // Функція показу повідомлення про помилку\n  function showError(message) {\n    iziToast.error({\n      title: 'Error',\n      position: 'topRight',\n      message: message,\n    });\n  }\n\n  // Функція показу завантажувача\n  function showLoader() {\n    loader.style.display = 'block';\n  }\n\n  // Функція приховування завантажувача\n  function hideLoader() {\n    loader.style.display = 'none';\n  }\n\n  // Функція для перевірки видимості кнопки \"Load more\"\n  function checkLoadMoreBtnVisibility() {\n    if (page <= maxPage) {\n      // Якщо поточна сторінка менша або дорівнює максимальній сторінці, показуємо кнопку \"Load more\"\n      loadMoreBtn.classList.remove('hidden');\n    } else {\n      // Інакше ховаємо кнопку \"Load more\"\n      loadMoreBtn.classList.add('hidden');\n    }\n  }\n\n  searchForm.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    query = event.target.elements.query.value.trim();\n    if (!query) {\n      showError('Please enter a search query');\n      return;\n    }\n\n    clearGallery();\n    showLoader();\n\n    try {\n      const images = await searchImages(query, page);\n      renderImages(images);\n      maxPage = Math.ceil(images.length / 15);\n    } catch (error) {\n      showError('Failed to fetch images. Please try again later.');\n    } finally {\n      hideLoader();\n      checkLoadMoreBtnVisibility();\n    }\n  });\n\n  // Обробник кліку на кнопку \"Load more\"\n  const loadMoreBtn = document.querySelector('.js-btn-load');\n\n  loadMoreBtn.addEventListener('click', async () => {\n    page++;\n    showLoader();\n    try {\n      const images = await searchImages(query, page);\n      renderImages(images);\n      maxPage = Math.ceil(images.length / 15);\n    } catch (error) {\n      showError('Failed to fetch more images. Please try again later.');\n    } finally {\n      hideLoader();\n      checkLoadMoreBtnVisibility();\n    }\n  });\n\n  // Ініціалізуємо SimpleLightbox при завантаженні сторінки\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n});\n"],"names":["API_KEY","PER_PAGE","currentPage","searchImages","keyword","url","axios","image","lightbox","clearGallery","gallery","renderImages","images","createListItemWithParagraph","label","value","className","listItem","paragraph","link","img","dataList","likesItem","viewsItem","commentsItem","downloadsItem","info","container","SimpleLightbox","searchForm","loader","page","query","maxPage","showError","message","iziToast","showLoader","hideLoader","checkLoadMoreBtnVisibility","loadMoreBtn","event"],"mappings":"owBAAA,MAAMA,EAAU,qCAGVC,EAAW,GACjB,IAAIC,EAAc,EAEX,eAAeC,EAAaC,EAAS,CAC1C,MAAMC,EAAM,gCAAgCL,CAAO,MAAM,mBACvDI,CACD,CAAA,iEAAiEF,CAAW,aAAaD,CAAQ,GAElG,GAAI,CAGF,OAFiB,MAAMK,EAAM,IAAID,CAAG,GACd,KACV,KAAK,IAAIE,IAAU,CAC7B,aAAcA,EAAM,aACpB,cAAeA,EAAM,cACrB,KAAMA,EAAM,KACZ,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,SAAUA,EAAM,SAChB,UAAWA,EAAM,SAClB,EAAC,CACH,MAAe,CACd,MAAM,IAAI,MAAM,yCAAyC,CAC1D,CACH,CCxBA,IAAIC,EAAW,KAGR,SAASC,GAAe,CAC7B,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,CAGO,SAASC,EAAaC,EAAQ,CACnC,MAAMF,EAAU,SAAS,cAAc,UAAU,EAGjDA,EAAQ,UAAY,GAGpB,SAASG,EAA4BC,EAAOC,EAAOC,EAAW,CAC5D,MAAMC,EAAW,SAAS,cAAc,IAAI,EAC5CA,EAAS,YAAc,GAAGH,CAAK,GAC/BG,EAAS,UAAU,IAAID,CAAS,EAChC,MAAME,EAAY,SAAS,cAAc,GAAG,EAC5C,OAAAA,EAAU,YAAc,GAAGH,CAAK,GAChCE,EAAS,YAAYC,CAAS,EACvBD,CACR,CAEDL,EAAO,QAAQL,GAAS,CAEtB,MAAMY,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,KAAOZ,EAAM,cAClBY,EAAK,QAAQ,IAAMZ,EAAM,cAGzB,MAAMa,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,IAAMb,EAAM,aAChBa,EAAI,IAAMb,EAAM,KAChBa,EAAI,MAAQb,EAAM,KAGlBY,EAAK,YAAYC,CAAG,EAGpB,MAAMC,EAAW,SAAS,cAAc,IAAI,EAC5CA,EAAS,UAAU,IAAI,aAAa,EAGpC,MAAMC,EAAYT,EAChB,SACAN,EAAM,MACN,aACN,EACUgB,EAAYV,EAChB,SACAN,EAAM,MACN,aACN,EACUiB,EAAeX,EACnB,YACAN,EAAM,SACN,aACN,EACUkB,EAAgBZ,EACpB,aACAN,EAAM,UACN,aACN,EAEIc,EAAS,YAAYC,CAAS,EAC9BD,EAAS,YAAYE,CAAS,EAC9BF,EAAS,YAAYG,CAAY,EACjCH,EAAS,YAAYI,CAAa,EAGlC,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,YAAY,EAC/BA,EAAK,YAAYL,CAAQ,EAGzB,MAAMM,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAU,IAAI,iBAAiB,EACzCA,EAAU,YAAYR,CAAI,EAC1BQ,EAAU,YAAYD,CAAI,EAG1BhB,EAAQ,YAAYiB,CAAS,CACjC,CAAG,EAGInB,EAGHA,EAAS,QAAO,EAFhBA,EAAW,IAAIoB,EAAe,YAAY,CAI9C,CCiBA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAa,SAAS,eAAe,aAAa,EACxC,SAAS,eAAe,SAAS,EACjD,MAAMC,EAAS,SAAS,eAAe,QAAQ,EAE/C,IAAIC,EAAO,EACPC,EAAQ,GACRC,EAAU,EAGd,SAASC,EAAUC,EAAS,CAC1BC,EAAS,MAAM,CACb,MAAO,QACP,SAAU,WACV,QAASD,CACf,CAAK,CACF,CAGD,SAASE,GAAa,CACpBP,EAAO,MAAM,QAAU,OACxB,CAGD,SAASQ,GAAa,CACpBR,EAAO,MAAM,QAAU,MACxB,CAGD,SAASS,GAA6B,CAChCR,GAAQE,EAEVO,EAAY,UAAU,OAAO,QAAQ,EAGrCA,EAAY,UAAU,IAAI,QAAQ,CAErC,CAEDX,EAAW,iBAAiB,SAAU,MAAMY,GAAS,CAInD,GAHAA,EAAM,eAAc,EAEpBT,EAAQS,EAAM,OAAO,SAAS,MAAM,MAAM,OACtC,CAACT,EAAO,CACVE,EAAU,6BAA6B,EACvC,MACD,CAEDzB,IACA4B,IAEA,GAAI,CACF,MAAMzB,EAAS,MAAMT,EAAa6B,EAAOD,CAAI,EAC7CpB,EAAaC,CAAM,EACnBqB,EAAU,KAAK,KAAKrB,EAAO,OAAS,EAAE,CACvC,MAAe,CACdsB,EAAU,iDAAiD,CACjE,QAAc,CACRI,IACAC,GACD,CACL,CAAG,EAGD,MAAMC,EAAc,SAAS,cAAc,cAAc,EAEzDA,EAAY,iBAAiB,QAAS,SAAY,CAChDT,IACAM,IACA,GAAI,CACF,MAAMzB,EAAS,MAAMT,EAAa6B,EAAOD,CAAI,EAC7CpB,EAAaC,CAAM,EACnBqB,EAAU,KAAK,KAAKrB,EAAO,OAAS,EAAE,CACvC,MAAe,CACdsB,EAAU,sDAAsD,CACtE,QAAc,CACRI,IACAC,GACD,CACL,CAAG,EAGgB,IAAIX,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAClB,CAAG,CACH,CAAC"}