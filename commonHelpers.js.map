{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '43047310-ec96e83c6d494f225a37e8405';\n\nexport async function searchImages(keyword) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(\n    keyword\n  )}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.hits.map(image => ({\n      webformatURL: image.webformatURL,\n      largeImageURL: image.largeImageURL,\n      tags: image.tags,\n      likes: image.likes,\n      views: image.views,\n      comments: image.comments,\n      downloads: image.downloads,\n    }));\n  } catch (error) {\n    throw new Error('Failed to fetch images from Pixabay API');\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Определение функции clearGallery\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n}\n\n// Определение функции renderImages\nexport function renderImages(images) {\n  const gallery = document.querySelector('.gallery');\n\n  // Очищаем галерею перед добавлением новых изображений\n  gallery.innerHTML = '';\n\n  // Функция для создания <li> с <p> и классом\n  function createListItemWithParagraph(label, value, className) {\n    const listItem = document.createElement('li');\n    listItem.textContent = `${label}`;\n    listItem.classList.add(className); // Добавление класса к <li>\n    const paragraph = document.createElement('p');\n    paragraph.textContent = `${value}`;\n    listItem.appendChild(paragraph); // Добавление <p> к <li>\n    return listItem;\n  }\n\n  images.forEach(image => {\n    // Создаем элемент ссылки для каждого изображения\n    const link = document.createElement('a');\n    link.href = image.largeImageURL;\n    link.dataset.src = image.largeImageURL; // Добавляем data-src для SimpleLightbox\n\n    // Создаем элемент изображения\n    const img = document.createElement('img');\n    img.src = image.webformatURL;\n    img.alt = image.tags;\n    img.title = image.tags;\n\n    // Добавляем изображение к ссылке\n    link.appendChild(img);\n\n    // Создаем список с данными\n    const dataList = document.createElement('ul');\n    dataList.classList.add('my-ul-class');\n\n    // Создаем элемент <li> для каждого значения и добавляем к <ul>\n    const likesItem = createListItemWithParagraph(\n      'Likes:',\n      image.likes,\n      'my-li-class'\n    );\n    const viewsItem = createListItemWithParagraph(\n      'Views:',\n      image.views,\n      'my-li-class'\n    );\n    const commentsItem = createListItemWithParagraph(\n      'Comments:',\n      image.comments,\n      'my-li-class'\n    );\n    const downloadsItem = createListItemWithParagraph(\n      'Downloads:',\n      image.downloads,\n      'my-li-class'\n    );\n\n    dataList.appendChild(likesItem);\n    dataList.appendChild(viewsItem);\n    dataList.appendChild(commentsItem);\n    dataList.appendChild(downloadsItem);\n\n    // Создаем элемент для размещения списка данных\n    const info = document.createElement('div');\n    info.classList.add('image-info');\n    info.appendChild(dataList);\n\n    // Создаем контейнер для изображения и данных\n    const container = document.createElement('div');\n    container.classList.add('image-container');\n    container.appendChild(link);\n    container.appendChild(info);\n\n    // Добавляем контейнер к галерее\n    gallery.appendChild(container);\n  });\n\n  // После добавления изображений вызываем метод refresh для SimpleLightbox\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n","// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { searchImages } from './js/pixabay-api';\nimport { clearGallery, renderImages } from './js/render-functions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchForm = document.getElementById('search-form');\n  const loader = document.getElementById('loader');\n  let lightbox; // Оголошуємо змінну lightbox тут, щоб мати доступ до неї поза блоком обробника подій\n\n  searchForm.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    const query = event.target.elements.query.value.trim();\n    if (!query) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please enter a search query',\n      });\n      return;\n    }\n\n    clearGallery(); // Виклик функції clearGallery\n    loader.style.display = 'block';\n\n    try {\n      const images = await searchImages(query);\n      renderImages(images);\n\n      // Після відображення нових зображень оновлюємо lightbox\n      if (lightbox) {\n        lightbox.refresh();\n      } else {\n        lightbox = new SimpleLightbox('.gallery a', {\n          captionsData: 'alt',\n          captionDelay: 250,\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n      iziToast.error({\n        title: 'Error',\n        message: 'Failed to fetch images. Please try again later.',\n      });\n    } finally {\n      loader.style.display = 'none';\n    }\n  });\n  lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n});\n"],"names":["API_KEY","searchImages","keyword","url","image","clearGallery","gallery","renderImages","images","createListItemWithParagraph","label","value","className","listItem","paragraph","link","img","dataList","likesItem","viewsItem","commentsItem","downloadsItem","info","container","SimpleLightbox","searchForm","loader","lightbox","event","query","iziToast","error"],"mappings":"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"}